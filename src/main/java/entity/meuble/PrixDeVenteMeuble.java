package entity.meuble;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.time.LocalDateTime;

import com.genericdao.GenericDAO;
import com.genericdao.annotation.Column;
import com.genericdao.annotation.Id;
import com.genericdao.annotation.Table;

@Table(name = "prix_de_vente_meuble")
public class PrixDeVenteMeuble extends GenericDAO {

    @Id(autoGenerated = true)
    @Column(name = "id")
    private Integer id;

    @Column(name = "id_formule_meuble")
    private Integer idFormuleMeuble;

    @Column(name = "date_debut")
    private LocalDateTime dateDebut;

    @Column(name = "date_fin")
    private LocalDateTime dateFin;

    @Column(name = "valeur")
    private Double valeur;

    public PrixDeVenteMeuble() {

    }

    public PrixDeVenteMeuble(Integer id, Integer idFormuleMeuble, LocalDateTime dateDebut, LocalDateTime dateFin,
            Double valeur) {
        setId(id);
        setIdFormuleMeuble(idFormuleMeuble);
        setDateDebut(dateDebut);
        setDateFin(dateFin);
        setValeur(valeur);

    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return id;
    }

    public void setIdFormuleMeuble(Integer idFormuleMeuble) {
        this.idFormuleMeuble = idFormuleMeuble;
    }

    public Integer getIdFormuleMeuble() {
        return idFormuleMeuble;
    }

    public void setDateDebut(LocalDateTime dateDebut) {
        this.dateDebut = dateDebut;
    }

    public LocalDateTime getDateDebut() {
        return dateDebut;
    }

    public void setDateFin(LocalDateTime dateFin) {
        this.dateFin = dateFin;
    }

    public LocalDateTime getDateFin() {
        return dateFin;
    }

    public void setValeur(Double valeur) {
        this.valeur = valeur;
    }

    public Double getValeur() {
        return valeur;
    }

    public static PrixDeVenteMeuble selectByIdFormuleMeuble(Connection connection, Integer idFormuleMeuble,
            LocalDateTime date) throws Exception {
        String query = "SELECT * FROM prix_de_vente_meuble WHERE id_formule_meuble = ? AND date_debut <= ? AND date_fin > ?";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, idFormuleMeuble);
        statement.setObject(2, date);
        statement.setObject(3, date);
        return PrixDeVenteMeuble.selectOneByPreparedStatement(PrixDeVenteMeuble.class, statement, connection);
    }

    public static PrixDeVenteMeuble selectByIdFormuleMeubleAndDateFin(Connection connection, Integer idFormuleMeuble,
            LocalDateTime dateFin) throws Exception {
        String query = "SELECT * FROM prix_de_vente_meuble WHERE id_formule_meuble = ? AND date_fin = ?";
        PreparedStatement statement = connection.prepareStatement(query);
        statement.setInt(1, idFormuleMeuble);
        statement.setObject(2, dateFin);
        return PrixDeVenteMeuble.selectOneByPreparedStatement(PrixDeVenteMeuble.class, statement, connection);
    }

}