package entity.employe;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import com.genericdao.GenericDAO;
import com.genericdao.annotation.Column;
import com.genericdao.annotation.Id;
import com.genericdao.annotation.Table;

import exception.FieldEmptyException;



@Table( name = "niveau" )
public class Niveau extends GenericDAO {

    @Id( autoGenerated = true)
	@Column( name = "id")
	private Integer id;

	@Column( name = "nom")
	private String nom;

	@Column( name = "ordre")
	private Integer ordre;

	

    public Niveau() {

    }

    public Niveau(Integer id, String nom, Integer ordre) throws Exception{
        setId(id);
		setNom(nom);
		setOrdre(ordre);
		
    }

    public void setId(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setNom(String nom) throws Exception{
		if (nom.trim().isEmpty()) {
			throw new FieldEmptyException("Nom");
		}
		this.nom = nom;
	}

	public String getNom() {
		return nom;
	}

	public void setOrdre(Integer ordre) {
		this.ordre = ordre;
	}

	public Integer getOrdre() {
		return ordre;
	}

	public static Boolean isNiveauArriveAfter(Connection connection,Integer idNievauDepart,Integer idNiveauArrive) throws Exception{
		Boolean result = null;
		String query = "select depart<arrive as result from\r\n" + //
				"(select ordre as depart from niveau where id= ? ) as q1\r\n" + //
				"cross join \r\n" + //
				"(select ordre as arrive from niveau where id= ? ) as q2\r\n" + //
				";";
		PreparedStatement preparedStatement = connection.prepareStatement(query);
		preparedStatement.setInt(1, idNievauDepart);
		preparedStatement.setInt(2, idNiveauArrive);
		ResultSet resultSet = preparedStatement.executeQuery();
		if (resultSet.next()) {
			result = resultSet.getBoolean("result");
		}
		preparedStatement.close();
		resultSet.close();
		return result;
	}

}